# Uses pre-extracted flows.
# Training set is fbms59 resized trainval.
batch_size: 8
epochs: 20
override_max_epochs: 4
optimizer: Adam
# Changed the learning rate:
# original: 1.e-4
learning_rate: 1.e-5
weight_decay: 5.e-6

workers: 16

checkpoints_dir: saved_fbms59/saved_rcf_stage2.1
preferred_linalg_library: cusolver
model_cls: RCFModel

eval_pos_th: 0.35

disable_wandb: true
allow_overwriting_checkpoints_dir: false

train_transform_kwargs:
  strong_aug: true

test_transform_kwargs:
  strong_aug: false

loss_log_interval: 100

# Use fbms59 resized as training set
data_path: ./data/data_fbms59_resized
dataset_kwargs: {}

train_dataset_kwargs:
  frame_num: 2
  load_flow: true
  flow_suffix: "_NewCT"
  split: trainval.txt
  zero_ann: false

test_dataset_kwargs:
  frame_num: 1
  load_flow: false
  split: val_ann.txt
  zero_ann: false

lr_scheduler_kwargs:
  # policy: 'poly'
  power: 0.9
  min_lr: 1.e-6

# Get object channel after 1 epoch
set_object_channel_after_epoch: 2

trainer_kwargs:
  check_val_every_n_epoch: 1
  amp_backend: "native"
  precision: 16
  # Enable cudnn benchmark
  benchmark: true

model_kwargs:
  # Smaller segmentation loss from motion
  w_seg: 1.
  # Use entropy and do not use sharpen
  w_sharpen: 0
  w_entropy: 0
  # Use different last convolution for fw and bw residual
  separate_residual: true
  # Use CRF
  w_crf: 10.0
  crf_use_ema: true
  # Update the model with EMA
  ema_m: 0.999
  crf_pos_weight: 2.
  crf_neg_weight: 1.
  
  align_corners: false
  mask_size: [96, 96]
  allow_mask_resize: false
  backbone2:
    # Changed to v2.1
    # dilations: [1, 1, 1, 2]
    dilations: [1, 1, 2, 4]
    strides: [1, 2, 1, 1]
    type: ResNet
    depth: 50
    num_stages: 4
    out_indices: [0, 1, 2, 3]
    norm_cfg: &id001
      type: SyncBN
      requires_grad: true
    norm_eval: false
    style: pytorch
    # Changed to v2.1
    # contract_dilation: false
    contract_dilation: true
    create_ema: true
  # Enable residual and clamp
  decode_head:
    ssim_sz: 1
    create_flownet: true
    mask_layer: 3
    type: FlowAggregationHeadWithResidual
    flow_feat_before_agg_kernel_size: 3
    num_flow_feat_channels: 64
    mask_size: [96, 96]
    norm_flow: false
    clamp_flow_t: 20.
    free_residual: false
    free_residual_with_affine: true
    allow_residual_resize: true
    residual_adjustment_scale: 10.
    # Default value: put here to allow overriding from command line
    # This is the division coefficient before tanh.
    pred_div_coeff: 10.
  decode_head2:
    input_transform: resize_concat
    concat_input: false
    dilation: 6
    channels: 256
    type: FCNHead
    in_channels: [256, 2048]
    in_index: [0, 3]
    num_convs: 2
    dropout_ratio: 0.1
    num_classes: 3
    norm_cfg: *id001
    align_corners: false
    create_ema: true
    loss_decode:
      type: CrossEntropyLoss
      use_sigmoid: false
      loss_weight: 1.0
  decode_head3:
    concat_input: false
    dilation: 6
    channels: 256
    type: FCNHead
    in_channels: 4096
    # Only use the last map
    in_index: -1
    num_convs: 2
    dropout_ratio: 0.1
    # in_channel is 4096 (2048 * 2 as we have two frames) as in the original one
    # Predicted residual is 48x48, resize in `decode_head` with `allow_residual_resize`
    # Output dimension is 12 because we need to split to fw and bw
    num_classes: 12
    norm_cfg: *id001
    align_corners: false
    loss_decode:
      type: CrossEntropyLoss
      use_sigmoid: false
      loss_weight: 1.0
  crf_head:
    type: CRFHead
  mask_layer: 3

eval_save: true
# export depends on save
eval_export: false

# Please set:
object_channel: 0
pretrained_model: saved_fbms59/saved_rcf_stage1/last.ckpt
